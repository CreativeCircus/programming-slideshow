{"version":3,"sources":["main.js"],"names":["slideshow","time","selector","intervalID","$slideshowContainer","document","querySelector","console","warn","currentSlideNumber","$slides","querySelectorAll","next","$currentSlide","classList","remove","length","add","prev","stop","clearInterval","start","setInterval","mySlideshow1","mySlideshow2"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,IAAIA,YAAY,SAAZA,SAAY,CAASC,IAAT,EAAeC,QAAf,EAAyB;;AAExC,KAAIC,mBAAJ;;AAEA;AACA,KAAIC,sBAAsBC,SAASC,aAAT,CAAuBJ,QAAvB,CAA1B;AACA,KAAI,CAACE,mBAAL,EAA0B;AACzBG,UAAQC,IAAR,CAAa,mDAAmDN,QAAhE;AACA,SAAO,KAAP;AACA;;AAED,KAAIO,qBAAqB,CAAzB;AACA,KAAIC,UAAUN,oBAAoBO,gBAApB,CAAqC,QAArC,CAAd;;AAEA,KAAIC,OAAO,SAAPA,IAAO,GAAW;AACrB,MAAIC,gBAAgBT,oBAAoBE,aAApB,CAAkC,eAAlC,CAApB;AACAO,gBAAcC,SAAd,CAAwBC,MAAxB,CAA+B,QAA/B;;AAEAN;AACA,MAAIA,sBAAsBC,QAAQM,MAAlC,EAA0C;AACzCP,wBAAqB,CAArB;AACA;AACDC,UAASD,kBAAT,EAA8BK,SAA9B,CAAwCG,GAAxC,CAA4C,QAA5C;AACA,EATD;;AAWA,KAAIC,OAAO,SAAPA,IAAO,GAAW;AACrB,MAAIL,gBAAgBT,oBAAoBE,aAApB,CAAkC,eAAlC,CAApB;AACAO,gBAAcC,SAAd,CAAwBC,MAAxB,CAA+B,QAA/B;;AAEAN;AACA,MAAIA,qBAAqB,CAAzB,EAA4B;AAC3BA,wBAAqBC,QAAQM,MAAR,GAAiB,CAAtC;AACA;AACDN,UAASD,kBAAT,EAA8BK,SAA9B,CAAwCG,GAAxC,CAA4C,QAA5C;AACA,EATD;;AAWA,KAAIE,OAAO,SAAPA,IAAO,GAAY;AACtBC,gBAAcjB,UAAd;AACA,EAFD;;AAIA,KAAIkB,QAAQ,SAARA,KAAQ,GAAW;AACtBF;AACAhB,eAAamB,YAAYJ,IAAZ,EAAkBjB,IAAlB,CAAb;AACA,EAHD;;AAKAoB;;AAEA,QAAO;AACNT,QAAMA,IADA;AAENM,QAAMA,IAFA;AAGNC,QAAMA,IAHA;AAINE,SAAOA;AAJD,EAAP;AAOA,CAtDD;;AAyDA,IAAIE,eAAe,IAAIvB,SAAJ,CAAc,IAAd,EAAoB,aAApB,CAAnB;AACA,IAAIwB,eAAe,IAAIxB,SAAJ,CAAc,IAAd,EAAoB,aAApB,CAAnB","file":"main.js","sourcesContent":["\n// new rule: no unintended consequences.\n// don't fuck with anything else on the page.\n// if we have more than one slideshow, they should run independently.\n// that means SCOPE! both in variables and in finding elements\n// for the variable scope we're actually going to learn a whole new technique, called Functional Prototypes\n// this is where you write a function that builds a nice, self contained thing for you. \n// everything it needs is inside the function, and nothing is left outside, lying around, for other devs to metaphorically step on\n// if something is needed from outside, you can write your function to selectively expose certain things.\n// vehicle example with ignition function that turns on fuel pump, etc\n\n// brainstorm how slideshow works\n// do it.\n\n\nlet slideshow = function(time, selector) {\n\n\tlet intervalID;\n\n\t// find the element we're going to build the slideshow inside\n\tlet $slideshowContainer = document.querySelector(selector);\n\tif (!$slideshowContainer) {\n\t\tconsole.warn(\"Couldn't create slideshow, element not found: \" + selector)\n\t\treturn false\n\t}\n\t\n\tlet currentSlideNumber = 0;\n\tlet $slides = $slideshowContainer.querySelectorAll(\".slide\");\n\t\n\tlet next = function() {\n\t\tlet $currentSlide = $slideshowContainer.querySelector(\".slide.active\");\n\t\t$currentSlide.classList.remove(\"active\");\n\n\t\tcurrentSlideNumber++;\n\t\tif (currentSlideNumber >= $slides.length) {\n\t\t\tcurrentSlideNumber = 0;\n\t\t}\n\t\t$slides[ currentSlideNumber ].classList.add(\"active\")\n\t}\n\n\tlet prev = function() {\n\t\tlet $currentSlide = $slideshowContainer.querySelector(\".slide.active\");\n\t\t$currentSlide.classList.remove(\"active\");\n\n\t\tcurrentSlideNumber--;\n\t\tif (currentSlideNumber < 0) {\n\t\t\tcurrentSlideNumber = $slides.length - 1;\n\t\t}\n\t\t$slides[ currentSlideNumber ].classList.add(\"active\")\n\t}\n\n\tlet stop = function () {\n\t\tclearInterval(intervalID)\n\t}\n\n\tlet start = function() {\n\t\tstop()\n\t\tintervalID = setInterval(prev, time);\n\t}\n\t\n\tstart()\n\n\treturn {\n\t\tnext: next,\n\t\tprev: prev,\n\t\tstop: stop,\n\t\tstart: start\n\t}\n\n}\n\n\nlet mySlideshow1 = new slideshow(3000, \".slideshow1\")\nlet mySlideshow2 = new slideshow(1000, \".slideshow2\")"]}